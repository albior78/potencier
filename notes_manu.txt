créer le nouveau projet
    ->symfony new nomprojet --full (--full pour avoir toutes les options) -->
préparer le déploiement symfonyCloud
    ->symfony project:init (cela crèè 3 fichiers)
        dossier: .symfony avec 2 fichiers routes.yaml & services.yaml
        1 fichier: .symfony.cloud.yaml
            dans ce fichier modifier la version php utilisé, ici 8.0 par 7.4 et activer les 
            lignes 7.4 qui suivent
    Gitter l'ensemble
        ->git add .
        ->git commit -m 'initialisation sumfony cloud'
Créer le projet sur le cloud
    ->symfony project:create --title="nonprojet" --plan=development
Déploier sur le cloud
    ->symfony deploy
ouvrir chrome à partir du cloud
    ->symfony open:remote
------
info:
pour avoir la liste des projects sur le cloud
    ->symfony projects (bien relever le n°ID du projet si on veut l'effacer)
pour effacer un projet sur le cloud
    ->symfony project:delete --project=n°ID
------
Gitter après chaque journées de programmation && sauvegarder votre depot sur gitlab github
ou gitbucket.
Déploier également sur le cloud
    ->symfony deploy
--------------------------------------------------
BDD postgresql avec Doker

créer le fichier docker-compose.yaml
    ->php bin/console make:docker:database
        choisir postgresql
éditer le fichier docker-compose.yaml
    modifier la ligne avec:  image: 'postgres:13.4'
éditer le fichier doctrine.yaml qui se trouve dans config package
    rajouter en dessous DBAL : server_version: '13.4'
éditer le fichier .env
    placer: DATABASE_URL="postgresql://127.0.0.1:5432/db?serverVersion=13&charset=utf8"
arrêter le server
    ->symfony server:stop x2
crée la database dans docker (le service se lance avec une database créee)
    ->docker-compose up -d
pour supprimer cette database
    ->docker-compose down
pour lister les containers docker
    ->docker-compose ps
pour avoir les logs de création
    ->docker-compose logs
lancer le serveur
    ->symfony serve -d
pour lister les variables d'environement
    ->symfony var:export --multiline
pour faire une migration fichier (préparation) il faut utiliser symfony console
et non php bin/console
    ->symfony console make:migration
migration vers la BDD docker
    ->symfony console doctrine:migrations:migrate
---------------------------------------------------------------


